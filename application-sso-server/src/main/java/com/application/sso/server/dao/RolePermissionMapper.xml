<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.application.sso.server.dao.RolePermissionDao">
	<resultMap id="BaseResultMap"
		type="com.application.sso.server.model.RolePermission">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="role_id" property="roleId" jdbcType="VARCHAR" />
		<result column="permission_id" property="permissionId"
			jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="deleted" property="deleted" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		id, role_id, permission_id, create_time, update_time, deleted
	</sql>
	
	<select id="get" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from sys_re_role_permission
		where id = #{id,jdbcType=VARCHAR}
	</select>
	<delete id="delete" parameterType="java.lang.String">
		delete from sys_re_role_permission
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.application.sso.server.model.RolePermission">
		insert into sys_re_role_permission (id, role_id, permission_id,
		create_time, update_time, deleted
		)
		values (#{id,jdbcType=VARCHAR}, #{roleId,jdbcType=VARCHAR},
		#{permissionId,jdbcType=VARCHAR},
		#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{deleted,jdbcType=INTEGER}
		)
	</insert>
	
	<update id="update" parameterType="com.application.sso.server.model.RolePermission">
		update sys_re_role_permission
		<set>
			<if test="roleId != null">
				role_id = #{roleId,jdbcType=VARCHAR},
			</if>
			<if test="permissionId != null">
				permission_id = #{permissionId,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="deleted != null">
				deleted = #{deleted,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>

</mapper>